{"version":3,"names":["_react","_interopRequireDefault","require","_globals","_react2","_testUtils","_ProviderAuth","_store","_reactRedux","_jestFetchMock","_hooksRedux","_TaskListApp","_reactNative","beforeAll","fetchMock","enableMocks","describe","it","_asyncToGenerator2","_regenerator","mark","_callee","TestComponentSinUpdate","_render","getByTestId","wrap","_callee$","_context","prev","next","mockResponse","JSON","stringify","dispatch","useAppDispatch","act","setAddTask","name","createElement","Text","render","Provider","store","expect","toBeInTheDocument","stop"],"sources":["ProviderAuth.spec.tsx"],"sourcesContent":["import React from 'react';\r\nimport { describe, expect, test } from '@jest/globals';\r\nimport { render, screen, fireEvent } from '@testing-library/react';\r\nimport \"@testing-library/jest-dom\"\r\nimport userEvent from '@testing-library/user-event'\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { act } from 'react-dom/test-utils';\r\nimport '@testing-library/jest-dom'\r\nimport ProviderAuth from '../app/components/ProviderAuth'\r\nimport Toggle from '../app/components/Toggle'\r\nimport store from \"../app/store\";\r\nimport { Provider } from 'react-redux'\r\nimport fetchMock from 'jest-fetch-mock';\r\nimport { useAppDispatch, useAppSelector } from '../app/aplication/hooks-redux'\r\nimport { setAddTask } from '../app/slice/TaskListApp'\r\nimport { setIsAutheticate } from '../app/slice/configuration'\r\nimport { View, Text } from 'react-native';\r\n\r\nbeforeAll(() => {\r\n    fetchMock.enableMocks();\r\n\r\n\r\n});\r\n\r\ndescribe('Componet <ProviderAuth/>', () => {\r\n    it('Carga de ProviderAuth  de manera correcta y carga de los children del component', async () => {\r\n        fetchMock.mockResponse(JSON.stringify({ /* mock response data */ }));\r\n        const TestComponentSinUpdate = () => {\r\n            const dispatch = useAppDispatch();\r\n            act(() => {\r\n                dispatch(setAddTask({ name: \"test\" }));\r\n            });\r\n            return (\r\n                <ProviderAuth>\r\n                    <Text> Test de children </Text>\r\n                </ProviderAuth>\r\n            )\r\n        };\r\n        const { getByTestId } = render(<Provider store={store}><TestComponentSinUpdate></TestComponentSinUpdate></Provider>)\r\n        expect(getByTestId('providerComp')).toBeInTheDocument();\r\n\r\n    })\r\n\r\n})\r\n"],"mappings":";;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,QAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AACAA,OAAA;AAGA,IAAAG,UAAA,GAAAH,OAAA;AAEA,IAAAI,aAAA,GAAAL,sBAAA,CAAAC,OAAA;AAEA,IAAAK,MAAA,GAAAN,sBAAA,CAAAC,OAAA;AACA,IAAAM,WAAA,GAAAN,OAAA;AACA,IAAAO,cAAA,GAAAR,sBAAA,CAAAC,OAAA;AACA,IAAAQ,WAAA,GAAAR,OAAA;AACA,IAAAS,YAAA,GAAAT,OAAA;AAEA,IAAAU,YAAA,GAAAV,OAAA;AAEAW,SAAS,CAAC,YAAM;EACZC,yBAAS,CAACC,WAAW,CAAC,CAAC;AAG3B,CAAC,CAAC;AAEF,IAAAC,iBAAQ,EAAC,0BAA0B,EAAE,YAAM;EACvCC,EAAE,CAAC,iFAAiF,MAAAC,kBAAA,aAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAC,QAAA;IAAA,IAAAC,sBAAA,EAAAC,OAAA,EAAAC,WAAA;IAAA,OAAAL,YAAA,YAAAM,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAClFf,yBAAS,CAACgB,YAAY,CAACC,IAAI,CAACC,SAAS,CAAC,CAA2B,CAAC,CAAC,CAAC;UAC9DV,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAA,EAAS;YACjC,IAAMW,QAAQ,GAAG,IAAAC,0BAAc,EAAC,CAAC;YACjC,IAAAC,cAAG,EAAC,YAAM;cACNF,QAAQ,CAAC,IAAAG,uBAAU,EAAC;gBAAEC,IAAI,EAAE;cAAO,CAAC,CAAC,CAAC;YAC1C,CAAC,CAAC;YACF,OACIrC,MAAA,YAAAsC,aAAA,CAAChC,aAAA,WAAY,QACTN,MAAA,YAAAsC,aAAA,CAAC1B,YAAA,CAAA2B,IAAI,QAAC,oBAAwB,CACpB,CAAC;UAEvB,CAAC;UAAAhB,OAAA,GACuB,IAAAiB,cAAM,EAACxC,MAAA,YAAAsC,aAAA,CAAC9B,WAAA,CAAAiC,QAAQ;YAACC,KAAK,EAAEA;UAAM,GAAC1C,MAAA,YAAAsC,aAAA,CAAChB,sBAAsB,MAAyB,CAAW,CAAC,CAAC,EAA5GE,WAAW,GAAAD,OAAA,CAAXC,WAAW;UACnB,IAAAmB,eAAM,EAACnB,WAAW,CAAC,cAAc,CAAC,CAAC,CAACoB,iBAAiB,CAAC,CAAC;QAAC;QAAA;UAAA,OAAAjB,QAAA,CAAAkB,IAAA;MAAA;IAAA,GAAAxB,OAAA;EAAA,CAE3D,GAAC;AAEN,CAAC,CAAC"}