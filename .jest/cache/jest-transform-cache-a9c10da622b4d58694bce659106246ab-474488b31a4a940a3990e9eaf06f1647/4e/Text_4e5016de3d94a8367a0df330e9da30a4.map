{"version":3,"names":["PressabilityDebug","_interopRequireWildcard","require","_usePressability","_interopRequireDefault","_flattenStyle","_processColor","_StyleSheet","_AcessibilityMapping","_Platform","_TextAncestor","_TextNativeComponent","React","_jsxRuntime","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","Text","forwardRef","props","forwardedRef","_props$accessibilityS","_props$accessibilityS2","_props$accessibilityS3","_props$accessibilityS4","_props$accessibilityS5","_style","_style2","accessible","accessibilityLabel","accessibilityRole","allowFontScaling","ariaBusy","ariaChecked","ariaDisabled","ariaExpanded","ariaLabel","ariaSelected","ellipsizeMode","id","nativeID","onLongPress","onPress","onPressIn","onPressOut","onResponderGrant","onResponderMove","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","onStartShouldSetResponder","pressRetentionOffset","role","suppressHighlighting","restProps","_objectWithoutProperties2","_useState","useState","_useState2","_slicedToArray2","isHighlighted","setHighlighted","_accessibilityState","busy","accessibilityState","checked","disabled","expanded","selected","_disabled","nativeTextAccessibilityState","isPressable","initialized","useLazyInitialization","config","useMemo","pressRectOffset","event","onResponderTerminationRequest_DEPRECATED","onStartShouldSetResponder_DEPRECATED","eventHandlers","usePressability","eventHandlersForText","onClick","selectionColor","processColor","style","flattenStyle","_selectable","selectable","userSelect","userSelectToSelectableMap","verticalAlign","StyleSheet","compose","textAlignVertical","verticalAlignToTextAlignVerticalMap","__DEV__","isEnabled","color","numberOfLines","console","error","hasTextAncestor","useContext","TextAncestor","_accessible","Platform","select","ios","flattenedStyle","fontWeight","toString","_hasOnPressOrOnLongPress","jsx","NativeVirtualText","getAccessibilityRoleFromRole","ref","Provider","value","children","NativeText","OS","displayName","propTypes","TextPropTypes","newValue","_useState3","_useState4","oldValue","setValue","auto","text","none","contain","all","top","bottom","middle","module","exports"],"sources":["Text.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {PressEvent} from '../Types/CoreEventTypes';\n\nimport * as PressabilityDebug from '../Pressability/PressabilityDebug';\nimport usePressability from '../Pressability/usePressability';\nimport flattenStyle from '../StyleSheet/flattenStyle';\nimport processColor from '../StyleSheet/processColor';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport {getAccessibilityRoleFromRole} from '../Utilities/AcessibilityMapping';\nimport Platform from '../Utilities/Platform';\nimport TextAncestor from './TextAncestor';\nimport {NativeText, NativeVirtualText} from './TextNativeComponent';\nimport {type TextProps} from './TextProps';\nimport * as React from 'react';\nimport {useContext, useMemo, useState} from 'react';\n\n/**\n * Text is the fundamental component for displaying text.\n *\n * @see https://reactnative.dev/docs/text\n */\nconst Text: React.AbstractComponent<\n  TextProps,\n  React.ElementRef<typeof NativeText | typeof NativeVirtualText>,\n> = React.forwardRef((props: TextProps, forwardedRef) => {\n  const {\n    accessible,\n    accessibilityLabel,\n    accessibilityRole,\n    allowFontScaling,\n    'aria-busy': ariaBusy,\n    'aria-checked': ariaChecked,\n    'aria-disabled': ariaDisabled,\n    'aria-expanded': ariaExpanded,\n    'aria-label': ariaLabel,\n    'aria-selected': ariaSelected,\n    ellipsizeMode,\n    id,\n    nativeID,\n    onLongPress,\n    onPress,\n    onPressIn,\n    onPressOut,\n    onResponderGrant,\n    onResponderMove,\n    onResponderRelease,\n    onResponderTerminate,\n    onResponderTerminationRequest,\n    onStartShouldSetResponder,\n    pressRetentionOffset,\n    role,\n    suppressHighlighting,\n    ...restProps\n  } = props;\n\n  const [isHighlighted, setHighlighted] = useState(false);\n\n  const _accessibilityState = {\n    busy: ariaBusy ?? props.accessibilityState?.busy,\n    checked: ariaChecked ?? props.accessibilityState?.checked,\n    disabled: ariaDisabled ?? props.accessibilityState?.disabled,\n    expanded: ariaExpanded ?? props.accessibilityState?.expanded,\n    selected: ariaSelected ?? props.accessibilityState?.selected,\n  };\n\n  const _disabled =\n    restProps.disabled != null\n      ? restProps.disabled\n      : _accessibilityState?.disabled;\n\n  const nativeTextAccessibilityState =\n    _disabled !== _accessibilityState?.disabled\n      ? {..._accessibilityState, disabled: _disabled}\n      : _accessibilityState;\n\n  const isPressable =\n    (onPress != null ||\n      onLongPress != null ||\n      onStartShouldSetResponder != null) &&\n    _disabled !== true;\n\n  const initialized = useLazyInitialization(isPressable);\n  const config = useMemo(\n    () =>\n      initialized\n        ? {\n            disabled: !isPressable,\n            pressRectOffset: pressRetentionOffset,\n            onLongPress,\n            onPress,\n            onPressIn(event: PressEvent) {\n              setHighlighted(!suppressHighlighting);\n              onPressIn?.(event);\n            },\n            onPressOut(event: PressEvent) {\n              setHighlighted(false);\n              onPressOut?.(event);\n            },\n            onResponderTerminationRequest_DEPRECATED:\n              onResponderTerminationRequest,\n            onStartShouldSetResponder_DEPRECATED: onStartShouldSetResponder,\n          }\n        : null,\n    [\n      initialized,\n      isPressable,\n      pressRetentionOffset,\n      onLongPress,\n      onPress,\n      onPressIn,\n      onPressOut,\n      onResponderTerminationRequest,\n      onStartShouldSetResponder,\n      suppressHighlighting,\n    ],\n  );\n\n  const eventHandlers = usePressability(config);\n  const eventHandlersForText = useMemo(\n    () =>\n      eventHandlers == null\n        ? null\n        : {\n            onResponderGrant(event: PressEvent) {\n              eventHandlers.onResponderGrant(event);\n              if (onResponderGrant != null) {\n                onResponderGrant(event);\n              }\n            },\n            onResponderMove(event: PressEvent) {\n              eventHandlers.onResponderMove(event);\n              if (onResponderMove != null) {\n                onResponderMove(event);\n              }\n            },\n            onResponderRelease(event: PressEvent) {\n              eventHandlers.onResponderRelease(event);\n              if (onResponderRelease != null) {\n                onResponderRelease(event);\n              }\n            },\n            onResponderTerminate(event: PressEvent) {\n              eventHandlers.onResponderTerminate(event);\n              if (onResponderTerminate != null) {\n                onResponderTerminate(event);\n              }\n            },\n            onClick: eventHandlers.onClick,\n            onResponderTerminationRequest:\n              eventHandlers.onResponderTerminationRequest,\n            onStartShouldSetResponder: eventHandlers.onStartShouldSetResponder,\n          },\n    [\n      eventHandlers,\n      onResponderGrant,\n      onResponderMove,\n      onResponderRelease,\n      onResponderTerminate,\n    ],\n  );\n\n  // TODO: Move this processing to the view configuration.\n  const selectionColor =\n    restProps.selectionColor == null\n      ? null\n      : processColor(restProps.selectionColor);\n\n  let style = flattenStyle(restProps.style);\n\n  let _selectable = restProps.selectable;\n  if (style?.userSelect != null) {\n    _selectable = userSelectToSelectableMap[style.userSelect];\n  }\n\n  if (style?.verticalAlign != null) {\n    style = StyleSheet.compose(style, {\n      textAlignVertical:\n        verticalAlignToTextAlignVerticalMap[style.verticalAlign],\n    });\n  }\n\n  if (__DEV__) {\n    if (PressabilityDebug.isEnabled() && onPress != null) {\n      style = StyleSheet.compose(restProps.style, {\n        color: 'magenta',\n      });\n    }\n  }\n\n  let numberOfLines = restProps.numberOfLines;\n  if (numberOfLines != null && !(numberOfLines >= 0)) {\n    console.error(\n      `'numberOfLines' in <Text> must be a non-negative number, received: ${numberOfLines}. The value will be set to 0.`,\n    );\n    numberOfLines = 0;\n  }\n\n  const hasTextAncestor = useContext(TextAncestor);\n\n  const _accessible = Platform.select({\n    ios: accessible !== false,\n    default: accessible,\n  });\n\n  let flattenedStyle = flattenStyle(style);\n\n  if (typeof flattenedStyle?.fontWeight === 'number') {\n    flattenedStyle.fontWeight = flattenedStyle?.fontWeight.toString();\n  }\n\n  const _hasOnPressOrOnLongPress =\n    props.onPress != null || props.onLongPress != null;\n\n  return hasTextAncestor ? (\n    <NativeVirtualText\n      {...restProps}\n      accessibilityState={_accessibilityState}\n      {...eventHandlersForText}\n      accessibilityLabel={ariaLabel ?? accessibilityLabel}\n      accessibilityRole={\n        role ? getAccessibilityRoleFromRole(role) : accessibilityRole\n      }\n      isHighlighted={isHighlighted}\n      isPressable={isPressable}\n      selectable={_selectable}\n      nativeID={id ?? nativeID}\n      numberOfLines={numberOfLines}\n      selectionColor={selectionColor}\n      style={flattenedStyle}\n      ref={forwardedRef}\n    />\n  ) : (\n    <TextAncestor.Provider value={true}>\n      <NativeText\n        {...restProps}\n        {...eventHandlersForText}\n        disabled={_disabled}\n        selectable={_selectable}\n        accessible={\n          accessible == null && Platform.OS === 'android'\n            ? _hasOnPressOrOnLongPress\n            : _accessible\n        }\n        accessibilityLabel={ariaLabel ?? accessibilityLabel}\n        accessibilityState={nativeTextAccessibilityState}\n        accessibilityRole={\n          role ? getAccessibilityRoleFromRole(role) : accessibilityRole\n        }\n        allowFontScaling={allowFontScaling !== false}\n        ellipsizeMode={ellipsizeMode ?? 'tail'}\n        isHighlighted={isHighlighted}\n        nativeID={id ?? nativeID}\n        numberOfLines={numberOfLines}\n        selectionColor={selectionColor}\n        style={flattenedStyle}\n        ref={forwardedRef}\n      />\n    </TextAncestor.Provider>\n  );\n});\n\nText.displayName = 'Text';\n\n/**\n * Switch to `deprecated-react-native-prop-types` for compatibility with future\n * releases. This is deprecated and will be removed in the future.\n */\nText.propTypes = require('deprecated-react-native-prop-types').TextPropTypes;\n\n/**\n * Returns false until the first time `newValue` is true, after which this will\n * always return true. This is necessary to lazily initialize `Pressability` so\n * we do not eagerly create one for every pressable `Text` component.\n */\nfunction useLazyInitialization(newValue: boolean): boolean {\n  const [oldValue, setValue] = useState(newValue);\n  if (!oldValue && newValue) {\n    setValue(newValue);\n  }\n  return oldValue;\n}\n\nconst userSelectToSelectableMap = {\n  auto: true,\n  text: true,\n  none: false,\n  contain: true,\n  all: true,\n};\n\nconst verticalAlignToTextAlignVerticalMap = {\n  auto: 'auto',\n  top: 'top',\n  bottom: 'bottom',\n  middle: 'center',\n};\n\nmodule.exports = Text;\n"],"mappings":"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"}