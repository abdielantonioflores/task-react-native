{"version":3,"names":["_toolkit","require","counterSlice","createSlice","name","initialState","list","reducers","setAddTask","state","action","payload","setNewTask","console","log","push","exports","_counterSlice$actions","actions","_default","reducer"],"sources":["TaskListApp.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport type { RootState } from '../store'\r\n\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'tasklist',\r\n  // `createSlice` will infer the state type from the `initialState` argument\r\n  initialState:{\r\n    list:[]\r\n  },\r\n  reducers: {\r\n    setAddTask: (state,action) => {\r\n      state.list = action.payload\r\n    \r\n    },\r\n    setNewTask:(state,action)=>{\r\n      console.log(action.payload)\r\n      state.list.push(action.payload)\r\n    }\r\n  }\r\n})\r\n\r\nexport const {setAddTask,setNewTask } = counterSlice.actions\r\n\r\n\r\n\r\nexport default counterSlice.reducer"],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AAIO,IAAMC,YAAY,GAAG,IAAAC,oBAAW,EAAC;EACtCC,IAAI,EAAE,UAAU;EAEhBC,YAAY,EAAC;IACXC,IAAI,EAAC;EACP,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAU,EAAE,SAAAA,WAACC,KAAK,EAACC,MAAM,EAAK;MAC5BD,KAAK,CAACH,IAAI,GAAGI,MAAM,CAACC,OAAO;IAE7B,CAAC;IACDC,UAAU,EAAC,SAAAA,WAACH,KAAK,EAACC,MAAM,EAAG;MACzBG,OAAO,CAACC,GAAG,CAACJ,MAAM,CAACC,OAAO,CAAC;MAC3BF,KAAK,CAACH,IAAI,CAACS,IAAI,CAACL,MAAM,CAACC,OAAO,CAAC;IACjC;EACF;AACF,CAAC,CAAC;AAAAK,OAAA,CAAAd,YAAA,GAAAA,YAAA;AAEK,IAAAe,qBAAA,GAAiCf,YAAY,CAACgB,OAAO;EAA9CV,UAAU,GAAAS,qBAAA,CAAVT,UAAU;EAACI,UAAU,GAAAK,qBAAA,CAAVL,UAAU;AAAyBI,OAAA,CAAAJ,UAAA,GAAAA,UAAA;AAAAI,OAAA,CAAAR,UAAA,GAAAA,UAAA;AAAA,IAAAW,QAAA,GAI7CjB,YAAY,CAACkB,OAAO;AAAAJ,OAAA,cAAAG,QAAA"}